{
  "title": "Auto Generated CCD 30 Hours Post Discharge CCD",
  "content": "PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+DQo8aHRtbCB4bWxuczpuMT0idXJuOmhsNy1vcmc6djMiIHhtbG5zOmV4dD0idXJuOmhsNy1vcmc6c2R0YyIgeG1sbnM6ZXhzbHQ9Imh0dHA6Ly9leHNsdC5vcmcvY29tbW9uIiB4bWxuczptc3htbD0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTp4c2x0Ij4NCiAgPGhlYWQ+DQogICAgPE1FVEEgaHR0cC1lcXVpdj0iQ29udGVudC1UeXBlIiBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJzZXQ9aXNvLTg4NTktMSI+DQogICAgPHRpdGxlPkNvbnRpbnVpdHkgb2YgQ2FyZSBEb2N1bWVudDwvdGl0bGU+DQogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4NCiAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiIG1lZGlhPSJhbGwiPgoKICBib2R5IHsgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsgfSAKICBkZCB7CiAgICAgIGRpc3BsYXk6IGJsb2NrOwogICAgICBtYXJnaW4taW5saW5lLXN0YXJ0OiAwcHg7CiAgfQogIGFkZHJlc3MgeyBmb250LXN0eWxlOiBub3JtYWw7IH0gZHQgeyBjb2xvcjogIzc3NzsgZm9udC1zaXplOiAwLjc1ZW07IG1hcmdpbi1ib3R0b206IDNweDsgfSBoMSB7IGZvbnQtc2l6ZTogMS4yNWVtOyBkaXNwbGF5OiBibG9jazsgbWFyZ2luLWJsb2NrLXN0YXJ0OiAwcHg7IG1hcmdpbi1ibG9jay1lbmQ6IDBweDsgbWFyZ2luLWlubGluZS1zdGFydDogMHB4OyBtYXJnaW4taW5saW5lLWVuZDogMHB4OyB9IGgyIHsgZm9udC1zaXplOiAxLjEyZW07IGRpc3BsYXk6IGJsb2NrOyBtYXJnaW4tYmxvY2stc3RhcnQ6IDBweDsgbWFyZ2luLWJsb2NrLWVuZDogMHB4OyBtYXJnaW4taW5saW5lLXN0YXJ0OiAwcHg7IG1hcmdpbi1pbmxpbmUtZW5kOiAwcHg7IH0gaDMsIGg0IHsgZm9udC1zaXplOiAxZW07IHBhZGRpbmc6IDRweCAxMHB4OyB9IHVsIHsgcGFkZGluZy1sZWZ0OiAxNnB4OyB9IHRhYmxlIHsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgYm9yZGVyLXNwYWNpbmc6IDA7ICB3aWR0aDogMTAwJTsgIH0gdGhbY29sc3Bhbl0geyB0ZXh0LWFsaWduOiBjZW50ZXI7IH0gdHIgeyBib3JkZXItYm90dG9tOiAxcHggZG90dGVkICMyMjI7IH0gdHI6bGFzdC1jaGlsZCB7IGJvcmRlci1ib3R0b206bm9uZTsgfSB0ZCB7IHBhZGRpbmc6IDRweDsgdmVydGljYWwtYWxpZ246IHRvcDsgfSAjY3VzdG9tZXItYmFubmVyIHsgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICMwMDA7IGRpc3BsYXk6IHRhYmxlOyB3aWR0aDogMTAwJTsgfSAjY3VzdG9tZXItYmFubmVyIC50aXRsZSB7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgbGVmdDogMTBweDsgdG9wOiAyZW07IH0gI2N1c3RvbWVyLWJhbm5lciBzcGFuIHsgZGlzcGxheTogdGFibGUtcm93OyBmb250LXdlaWdodDogNzAwOyB0ZXh0LWFsaWduOiByaWdodDsgfSAjcGF0aWVudC1zdW1tYXJ5LCAjcGF0aWVudC1kZXRhaWxzIHsgcGFkZGluZzogMnB4IDEwcHg7IH0gI3BhdGllbnQtc3VtbWFyeSB7IGJvcmRlci1ib3R0b206IDFweCBkb3R0ZWQgIzAwMDsgcGFkZGluZy1ib3R0b206IDA7IH0gI3BhdGllbnQtZGV0YWlscyB7IGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjMDAwOyB9ICNwYXRpZW50LXN1bW1hcnkgZGl2LCAjcGF0aWVudC1kZXRhaWxzIGRpdiwgI2NhcmUtdGVhbSBkaXYsICNwYXRpZW50LWNvbnRhY3RzIGRpdiwgI2RvY3VtZW50LWRldGFpbHMgZGl2IHsgZGlzcGxheTogdGFibGU7IHdpZHRoOiAxMDAlOyB9ICNwYXRpZW50LXN1bW1hcnkgZGl2IGRsLCAjcGF0aWVudC1kZXRhaWxzIGRpdiBkbCwgI2NhcmUtdGVhbSBkaXYgZGwsICNwYXRpZW50LWNvbnRhY3RzIGRpdiBkbCwgI2RvY3VtZW50LWRldGFpbHMgZGl2IGRsIHsgd2lkdGg6IDI1JTsgZGlzcGxheTogdGFibGUtY2VsbDsgfSAjcGF0aWVudC1zdW1tYXJ5IGRpdiBkbDpudGgtb2YtdHlwZSgxKSAsICNwYXRpZW50LWRldGFpbHMgZGl2IGRsOm50aC1vZi10eXBlKDEpICwgI2NhcmUtdGVhbSBkaXYgZGw6bnRoLW9mLXR5cGUoMSkgLCAjcGF0aWVudC1jb250YWN0cyBkaXYgZGw6bnRoLW9mLXR5cGUoMSkgLCAjZG9jdW1lbnQtZGV0YWlscyBkaXYgZGw6bnRoLW9mLXR5cGUoMSkgeyB3aWR0aDogMjUlOyB9ICNwYXRpZW50LXN1bW1hcnkgZGl2IGRsOm50aC1vZi10eXBlKDIpICwgI3BhdGllbnQtZGV0YWlscyBkaXYgZGw6bnRoLW9mLXR5cGUoMikgLCAjY2FyZS10ZWFtIGRpdiBkbDpudGgtb2YtdHlwZSgyKSAsICNwYXRpZW50LWNvbnRhY3RzIGRpdiBkbDpudGgtb2YtdHlwZSgyKSAsICNkb2N1bWVudC1kZXRhaWxzIGRpdiBkbDpudGgtb2YtdHlwZSgyKSB7IHdpZHRoOiAyNSU7IH0gI3BhdGllbnQtc3VtbWFyeSBkaXYgZGw6bnRoLW9mLXR5cGUoMykgLCAjcGF0aWVudC1kZXRhaWxzIGRpdiBkbDpudGgtb2YtdHlwZSgzKSAsICNjYXJlLXRlYW0gZGl2IGRsOm50aC1vZi10eXBlKDMpICwgI3BhdGllbnQtY29udGFjdHMgZGl2IGRsOm50aC1vZi10eXBlKDMpICwgI2RvY3VtZW50LWRldGFpbHMgZGl2IGRsOm50aC1vZi10eXBlKDMpIHsgd2lkdGg6IDQwJTsgfSAjcGF0aWVudC1zdW1tYXJ5IGRpdiBkbDpudGgtb2YtdHlwZSg0KSAsICNwYXRpZW50LWRldGFpbHMgZGl2IGRsOm50aC1vZi10eXBlKDQpICwgI2NhcmUtdGVhbSBkaXYgZGw6bnRoLW9mLXR5cGUoNCkgLCAjcGF0aWVudC1jb250YWN0cyBkaXYgZGw6bnRoLW9mLXR5cGUoNCkgLCAjZG9jdW1lbnQtZGV0YWlscyBkaXYgZGw6bnRoLW9mLXR5cGUoNCkgeyB3aWR0aDogMTAlOyB0ZXh0LWFsaWduOiByaWdodDsgfSAjcGF0aWVudC1zdW1tYXJ5IGRpdiBkbDpsYXN0LWNoaWxkICwgI3BhdGllbnQtZGV0YWlscyBkaXYgZGw6bGFzdC1jaGlsZCAsICNjYXJlLXRlYW0gZGl2IGRsOmxhc3QtY2hpbGQgLCAjcGF0aWVudC1jb250YWN0cyBkaXYgZGw6bGFzdC1jaGlsZCAsICNkb2N1bWVudC1kZXRhaWxzIGRpdiBkbDpsYXN0LWNoaWxkIHsgfSAjcGF0aWVudC1kZXRhaWxzIGgzIHsgcGFkZGluZy1sZWZ0OiAwOyBib3JkZXItYm90dG9tOiAxcHggZG90dGVkICNjY2M7IH0gI3N1bW1hcnktYmFubmVyIGRpdiB7IGRpc3BsYXk6IHRhYmxlOyBwYWRkaW5nOiA0cHggMTBweDsgd2lkdGg6IDEwMCU7IH0gI3N1bW1hcnktYmFubmVyIGRpdiB1bCB7IGRpc3BsYXk6IHRhYmxlLWNlbGw7IHdpZHRoOiAzMyU7IGxpc3Qtc3R5bGU6IG5vbmU7IH0gI3N1bW1hcnktYmFubmVyIGEgeyBmb250LXNpemU6IDAuODU3MTRlbTsgfSAjc3VtbWFyeS1iYW5uZXIgaDMgeyB0ZXh0LWFsaWduOiBjZW50ZXI7IH0gI2NhcmUtdGVhbSA+IC5zZWN0aW9uLWJvZHkgPiBkaXYgLCAjcGF0aWVudC1jb250YWN0cyA+IC5zZWN0aW9uLWJvZHkgPiBkaXYgeyBib3JkZXItYm90dG9tOiAxcHggZG90dGVkOyB9ICNjYXJlLXRlYW0gPiAuc2VjdGlvbi1ib2R5ID4gZGl2Omxhc3QtY2hpbGQgLCAjcGF0aWVudC1jb250YWN0cyA+IC5zZWN0aW9uLWJvZHkgPiBkaXY6bGFzdC1jaGlsZCB7IGJvcmRlci1ib3R0b206IG5vbmU7IH0gLnBhdGllbnQtbmFtZSB7IGZvbnQtd2VpZ2h0OiA1MDA7IH0gLmRlY2Vhc2VkLWluZGljYXRvciB7IGZvbnQtc3R5bGU6IGl0YWxpYzsgZm9udC1zaXplOiAwLjZlbTsgfSAucGF0aWVudC1uYW1lID4gLnBhdGllbnQtbGFzdC1uYW1lIHsgZm9udC13ZWlnaHQ6IDcwMDsgfSAudGVsZWNvbSB7IHdvcmQtYnJlYWs6IGJyZWFrLWFsbDsgfSAuc2VjdGlvbiB7IHBvc2l0aW9uOiByZWxhdGl2ZTsgbWFyZ2luLXRvcDogMTBweDsgfSAuc2VjdGlvbi1ib2R5IHsgcGFkZGluZzogNHB4IDEwcHg7IGxpbmUtaGVpZ2h0OjEuM2VtOyB9IC5zZWN0aW9uIGg0IHsgZm9udC1zaXplOiAxLjE0MmVtOyBmb250LXdlaWdodDogNzAwOyBwYWRkaW5nOiA1cHggMTBweDsgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICMwMDA7IH0gLnNlY3Rpb24gYVtocmVmPScjdG9wJ10geyBmb250LXNpemU6IC42NWVtOyBwb3NpdGlvbjogYWJzb2x1dGU7IHJpZ2h0OiAycHg7IH0gLnNlY3Rpb24gdGhlYWQgeyBkaXNwbGF5OiBub25lOyB9IC5Cb2xkLCAuYm9sZCB7IGZvbnQtd2VpZ2h0OiA3MDA7IH0gLkl0YWxpY3MgeyBmb250LXN0eWxlOiBpdGFsaWM7IH0gLnhPcmdhbml6ZXJSb3cgPiB0ZCwgLm9yZ2FuaXplci1yb3cgPiB0ZCB7IHBhZGRpbmctYm90dG9tOjRweDsgfSAueE9yZ2FuaXplclJvdywgLm9yZ2FuaXplci1yb3cgeyBib3JkZXItYm90dG9tOm5vbmU7IH0gLnhXaGl0ZXNwYWNlIHsgcGFkZGluZy1sZWZ0OjRweDsgfSAueENvbnRlbnRTcGFjaW5nIHsgcGFkZGluZy1sZWZ0OjIuNWVtOyB9IC54Um93R3JvdXAgPiB0ciB7IGJvcmRlci1ib3R0b206IG5vbmU7IH0gdGFibGU6Zmlyc3Qtb2YtdHlwZSA+IHRib2R5OmZpcnN0LW9mLXR5cGUgeyBib3JkZXItdG9wOiBub25lOyB9IC54Um93R3JvdXAgeyBib3JkZXItdG9wOiAxcHggZG90dGVkICMyMjIgfSAueFNlY3Rpb25Db21tZW50cyB7IHRleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7IH0gLnhTZWN0aW9uQ29tbWVudHMsIC54UmVjb25jaWxpYXRpb24geyBtYXJnaW4tdG9wOjE1cHg7IH0gLnhMYWJlbCB7IGZvbnQtc3R5bGU6aXRhbGljOyB9IC54QWxlcnQsIC54UmVhY3Rpb257IGNvbG9yOiNkODAwMEMgfSB0ci54QWxlcnQgeyBiYWNrZ3JvdW5kLWNvbG9yOiNGREU3RUMgfSB0ci54QWxlcnQgPiB0ZDpmaXJzdC1vZi10eXBlOmJlZm9yZSB7IGNvbnRlbnQ6ICJcMjVCMiI7IH0gLnhDb250ZW50V3JhcHBpbmcgeyBkaXNwbGF5OnRhYmxlLWNlbGw7IHBhZGRpbmctbGVmdDo1cHg7IH0gLnhJbmRlbnQsIC54SW5kZW50aW9ueyB3aGl0ZS1zcGFjZTpwcmU7IHZlcnRpY2FsLWFsaWduOnRvcDsgZGlzcGxheTp0YWJsZS1jZWxsOyB9IC54bGlzdEZvclRhYmxlIHsgbGlzdC1zdHlsZTogbm9uZTsgcGFkZGluZzogMDsgfSAueHRhYmxlV2l0aGluVGFibGUgPiB0ciA+IHRkIHsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyB9IGZvb3RlciB7IGZvbnQtc2l6ZTogMC43NWVtOyBjb2xvcjogI2NjYzsgdGV4dC1hbGlnbjogcmlnaHQ7IHBhZGRpbmctYm90dG9tOiAxMHB4OyB9IC54c2x0LXZlcnNpb246YmVmb3JlIHsgY29udGVudDogIiAiOyB9Cjwvc3R5bGU+DQogICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIiBtZWRpYT0icHJpbnQiPgojc3VtbWFyeS1iYW5uZXIgPiBkaXYgeyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0gLnNlY3Rpb24gYVtocmVmPScjdG9wJ10geyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0KPC9zdHlsZT4NCiAgPC9oZWFkPg0KICA8Ym9keT4NCiAgICA8ZGl2IGlkPSJjdXN0b21lci1iYW5uZXIiPjxzcGFuPkFUTDwvc3Bhbj48c3BhbiBjbGFzcz0icHJvdmlkZXJDaXR5U3RhdGUiPk5ld25hbiwgR0E8L3NwYW4+PC9kaXY+DQogICAgPGRpdiBpZD0icGF0aWVudC1zdW1tYXJ5Ij4NCiAgICAgIDxoMSBjbGFzcz0icGF0aWVudC1uYW1lIj5QYXRpZW50IE5hbWU6IDxzcGFuIGNsYXNzPSJwYXRpZW50LWxhc3QtbmFtZSI+VEVTVDwvc3Bhbj4sIFNlcmZsZXhmaWVsZDxicj48L2gxPjxicj48ZGl2Pg0KICAgICAgICA8ZGw+DQogICAgICAgICAgPGRkPkZlYnJ1YXJ5IDE0LCAxOTg4PC9kZD4NCiAgICAgICAgICA8ZHQ+RGF0ZSBvZiBCaXJ0aDwvZHQ+DQogICAgICAgIDwvZGw+DQogICAgICAgIDxkbD4NCiAgICAgICAgICA8ZGQ+RmVtYWxlPC9kZD4NCiAgICAgICAgICA8ZHQ+U2V4PC9kdD4NCiAgICAgICAgPC9kbD4NCiAgICAgICAgPGRsPg0KICAgICAgICAgIDxkZD5SRVNFQVJDSCBDTElOSUNBTFw1MTcwMTUxLCBSRVNFQVJDSCBDTElOSUNBTFw1MTcwMTU1LCBSRVNFQVJDSCBDTElOSUNBTFw1MTcwMTUxLCBSRVNFQVJDSCBDTElOSUNBTFw1MTcwMTU1PC9kZD4NCiAgICAgICAgICA8ZHQ+SW5zdXJlcjwvZHQ+DQogICAgICAgIDwvZGw+DQogICAgICAgIDxkbD4NCiAgICAgICAgICA8ZGQ+MTkwMDAxNDUxPC9kZD4NCiAgICAgICAgICA8ZHQ+UGF0aWVudCBJZDwvZHQ+DQogICAgICAgIDwvZGw+DQogICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCiAgICA8ZGl2IGlkPSJwYXRpZW50LWRldGFpbHMiPg0KICAgICAgPGRpdj4NCiAgICAgICAgPGRsPg0KICAgICAgICAgIDxkZD4NCiAgICAgICAgICAgIDxhZGRyZXNzPjI2MTAgU2hlcmlkYW4gUmQuPGJyPlppb24sIElMIDYwMDk5IDwvYWRkcmVzcz4NCiAgICAgICAgICA8L2RkPg0KICAgICAgICAgIDxkdD5BZGRyZXNzPC9kdD4NCiAgICAgICAgPC9kbD4NCiAgICAgICAgPGRsPg0KICAgICAgICAgIDxkZCBjbGFzcz0idGVsZWNvbSI+KDc3MCk0MDAtMTExMTwvZGQ+DQogICAgICAgICAgPGR0PiBQaG9uZTwvZHQ+DQogICAgICAgICAgPGRkIGNsYXNzPSJ0ZWxlY29tIj4oNzcwKTQwMC0yMjIyPC9kZD4NCiAgICAgICAgICA8ZHQ+SG9tZSBQaG9uZTwvZHQ+DQogICAgICAgICAgPGRkIGNsYXNzPSJ0ZWxlY29tIj5zZXJmbGV4ZmllbGQudGVzdEB0ZXN0Y3RjYS5jb208L2RkPg0KICAgICAgICAgIDxkdD4gRW1haWw8L2R0Pg0KICAgICAgICA8L2RsPg0KICAgICAgICA8ZGw+DQogICAgICAgICAgPGRkPkVuZ2xpc2ggKHByZWZlcnJlZCk8L2RkPg0KICAgICAgICAgIDxkdD5MYW5ndWFnZTwvZHQ+DQogICAgICAgICAgPGRkPkFzaWFuPC9kZD4NCiAgICAgICAgICA8ZHQ+UmFjZTwvZHQ+DQogICAgICAgICAgPGRkPk5vdCBIaXNwYW5pYyBvciBMYXRpbm88L2RkPg0KICAgICAgICAgIDxkdD5FdGhuaWNpdHk8L2R0Pg0KICAgICAgICAgIDxkZD5NYXJyaWVkPC9kZD4NCiAgICAgICAgICA8ZHQ+TWFyaXRhbCBTdGF0dXM8L2R0Pg0KICAgICAgICA8L2RsPg0KICAgICAgICA8ZGw+PC9kbD4NCiAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KICAgIDxkaXYgaWQ9InN1bW1hcnktYmFubmVyIj4NCiAgICAgIDxoMz5Db250aW51aXR5IG9mIENhcmUgRG9jdW1lbnQ8L2gzPg0KICAgICAgPGRpdiBJRD0idG9wIj4NCiAgICAgICAgPHVsPg0KICAgICAgICAgIDxsaT48YSBocmVmPSIjSUQwRU1FQUciPkFkdmFuY2UgRGlyZWN0aXZlczwvYT48L2xpPg0KICAgICAgICAgIDxsaT48YSBocmVmPSIjSUQwRVFMQUMiPkFsbGVyZ2llcyBhbmQgQWR2ZXJzZSBSZWFjdGlvbnM8L2E+PC9saT4NCiAgICAgICAgICA8bGk+PGEgaHJlZj0iI0lEMEVVREFDIj5Bc3Nlc3NtZW50czwvYT48L2xpPg0KICAgICAgICAgIDxsaT48YSBocmVmPSIjSUQwRVlHQUciPkVuY291bnRlcnM8L2E+PC9saT4NCiAgICAgICAgICA8bGk+PGEgaHJlZj0iI0lEMEVYRkFFIj5GYW1pbHkgSGlzdG9yeTwvYT48L2xpPg0KICAgICAgICAgIDxsaT48YSBocmVmPSIjSUQwRU5LQUUiPkZvcmVpZ24gVHJhdmVsPC9hPjwvbGk+DQogICAgICAgICAgPGxpPjxhIGhyZWY9IiNJRDBFUEpBQyI+RnVuY3Rpb25hbCBTdGF0dXM8L2E+PC9saT4NCiAgICAgICAgICA8bGk+PGEgaHJlZj0iI0lEMEVZTUFFIj5Hb2FsczwvYT48L2xpPg0KICAgICAgICA8L3VsPg0KICAgICAgICA8dWw+DQogICAgICAgICAgPGxpPjxhIGhyZWY9IiNJRDBFNktBRSI+SGVhbHRoIENvbmNlcm5zPC9hPjwvbGk+DQogICAgICAgICAgPGxpPjxhIGhyZWY9IiNJRDBFSVJBRSI+SG9zcGl0YWwgRGlzY2hhcmdlIEluc3RydWN0aW9uczwvYT48L2xpPg0KICAgICAgICAgIDxsaT48YSBocmVmPSIjSUQwRVBEQUUiPkltbXVuaXphdGlvbnM8L2E+PC9saT4NCiAgICAgICAgICA8bGk+PGEgaHJlZj0iI0lEMEUxUkFFIj5NZWRpY2FsIEVxdWlwbWVudDwvYT48L2xpPg0KICAgICAgICAgIDxsaT48YSBocmVmPSIjSUQwRUdQQUMiPk1lZGljYXRpb25zPC9hPjwvbGk+DQogICAgICAgICAgPGxpPjxhIGhyZWY9IiNJRDBFVkhBQyI+TWVudGFsIFN0YXR1czwvYT48L2xpPg0KICAgICAgICAgIDxsaT48YSBocmVmPSIjSUQwRVpPQUUiPk51dHJpdGlvbjwvYT48L2xpPg0KICAgICAgICAgIDxsaT48YSBocmVmPSIjSUQwRTFMQUciPlBheWVyczwvYT48L2xpPg0KICAgICAgICA8L3VsPg0KICAgICAgICA8dWw+DQogICAgICAgICAgPGxpPjxhIGhyZWY9IiNJRDBFTlRBRSI+UGxhbiBvZiBUcmVhdG1lbnQ8L2E+PC9saT4NCiAgICAgICAgICA8bGk+PGEgaHJlZj0iI0lEMEVIQUFDIj5Qcml2YWN5IE1hcmtpbmdzPC9hPjwvbGk+DQogICAgICAgICAgPGxpPjxhIGhyZWY9IiNJRDBFTEVBQyI+UHJvYmxlbXM8L2E+PC9saT4NCiAgICAgICAgICA8bGk+PGEgaHJlZj0iI0lEMEVYQkFFIj5Qcm9jZWR1cmVzPC9hPjwvbGk+DQogICAgICAgICAgPGxpPjxhIGhyZWY9IiNJRDBFSERBQyI+UmVhc29uIGZvciBSZWZlcnJhbDwvYT48L2xpPg0KICAgICAgICAgIDxsaT48YSBocmVmPSIjSUQwRVE1QUUiPlJlc3VsdHM8L2E+PC9saT4NCiAgICAgICAgICA8bGk+PGEgaHJlZj0iI0lEMEVHSUFFIj5Tb2NpYWwgSGlzdG9yeTwvYT48L2xpPg0KICAgICAgICAgIDxsaT48YSBocmVmPSIjSUQwRVFCQUciPlZpdGFsIFNpZ25zPC9hPjwvbGk+DQogICAgICAgIDwvdWw+DQogICAgICA8L2Rpdj4NCiAgICAgIDxkaXY+DQogICAgICAgIDx1bD4NCiAgICAgICAgICA8bGk+PGEgaHJlZj0iI2RvY3VtZW50LWRldGFpbHMiPkRvY3VtZW50IERldGFpbHM8L2E+PC9saT4NCiAgICAgICAgPC91bD4NCiAgICAgICAgPHVsPg0KICAgICAgICAgIDxsaT48YSBocmVmPSIjY2FyZS10ZWFtIj5IZWFsdGggQ2FyZSBQcm92aWRlcnM8L2E+PC9saT4NCiAgICAgICAgPC91bD4NCiAgICAgICAgPHVsPg0KICAgICAgICAgIDxsaT48YSBocmVmPSIjcGF0aWVudC1jb250YWN0cyI+UGF0aWVudCBDb250YWN0czwvYT48L2xpPg0KICAgICAgICA8L3VsPg0KICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQogICAgPGRpdiBjbGFzcz0ic2VjdGlvbiIgaWQ9IklEMEVIQUFDIj4NCiAgICAgIDxoND5Qcml2YWN5IE1hcmtpbmdzPC9oND4NCiAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24tYm9keSI+DQogICAgICAgIDxwIGNsYXNzPSJCb2xkIj48L3A+DQogICAgICAgIDx1bD4NCiAgICAgICAgICA8bGk+PHNwYW4gY2xhc3M9InhTZWNvbmRhcnkiPlNlY3Rpb24gQXV0aG9yOiBTQUNDREFDbGluaWNXUk1DLCBTVkMgQWNjbnQ8YnI+ICAgICAgUFJPSElCSVRJT04gT04gUkVESVNDTE9TVVJFIE9GIENPTkZJREVOVElBTCBJTkZPUk1BVElPTjxicj4gICAgICBUaGlzIG5vdGljZSBhY2NvbXBhbmllcyBhIGRpc2Nsb3N1cmUgb2YgaW5mb3JtYXRpb24gY29uY2VybmluZyBhIGNsaWVudCBtYWRlIHRvIHlvdSB3aXRoIHRoZSBjb25zZW50IG9mIHN1Y2ggY2xpZW50LiBUaGlzIGluZm9ybWF0aW9uIGhhcyBiZWVuIGRpc2Nsb3NlZCB0byB5b3UgIGZyb20gcmVjb3JkcyBwcm90ZWN0ZWQgYnkgZmVkZXJhbCBjb25maWRlbnRpYWxpdHkgcnVsZXMgKDQyIEMuRi5SLiBQYXJ0IDIpLiBUaGUgZmVkZXJhbCBydWxlcyBwcm9oaWJpdCB5b3UgZnJvbSBtYWtpbmcgYW55IGZ1cnRoZXIgZGlzY2xvc3VyZSBvZiB0aGlzIGluZm9ybWF0aW9uIHVubGVzcyBmdXJ0aGVyIGRpc2Nsb3N1cmUgaXMgZXhwcmVzc2x5IHBlcm1pdHRlZCBieSB0aGUgd3JpdHRlbiBjb25zZW50IG9mIHRoZSBwZXJzb24gdG8gd2hvbSBpdCBwZXJ0YWlucyBvciBhcyBvdGhlcndpc2UgcGVybWl0dGVkIGJ5IDQyIEMuRi5SLiBQYXJ0IDIuIEEgZ2VuZXJhbCBhdXRob3JpemF0aW9uIGZvciB0aGUgcmVsZWFzZSBvZiBtZWRpY2FsIG9yIG90aGVyIGluZm9ybWF0aW9uIGlzIE5PVCBzdWZmaWNpZW50IGZvciB0aGlzIHB1cnBvc2UuPGJyPiAgICA8L3NwYW4+PC9saT4NCiAgICAgICAgPC91bD4NCiAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iIGlkPSJJRDBFSERBQyI+DQogICAgICA8aDQ+UmVhc29uIGZvciBSZWZlcnJhbDwvaDQ+DQogICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uLWJvZHkiPg0KICAgICAgICA8dWw+DQogICAgICAgICAgPGxpPg0KICAgICAgICAgICAgPHAgY2xhc3M9InhTZWNvbmRhcnkiPlJlYXNvbiBGb3IgUmVmZXJyYWwgZXhjbHVkZWQvbm90IGF2YWlsYWJsZTwvcD4NCiAgICAgICAgICA8L2xpPg0KICAgICAgICA8L3VsPg0KICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQogICAgPGRpdiBjbGFzcz0ic2VjdGlvbiIgaWQ9IklEMEVVREFDIj4NCiAgICAgIDxoND5Bc3Nlc3NtZW50czwvaDQ+DQogICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uLWJvZHkiPg0KICAgICAgICA8cCBjbGFzcz0iQm9sZCI+PC9wPg0KICAgICAgICA8dWw+DQogICAgICAgICAgPGxpPjxzcGFuIGNsYXNzPSJ4U2Vjb25kYXJ5Ij5Bc3Nlc3NtZW50cyBleGNsdWRlZC9ub3QgYXZhaWxhYmxlPC9zcGFuPjwvbGk+DQogICAgICAgIDwvdWw+DQogICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCiAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIiBpZD0iSUQwRUxFQUMiPg0KICAgICAgPGg0PlByb2JsZW1zPC9oND4NCiAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24tYm9keSI+DQogICAgICAgIDx0YWJsZT4NCiAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICANCiAgICAgICAgICA8dGJvZHkgY2xhc3M9InhSb3dHcm91cCI+DQogICAgICAgICAgICA8dHIgSUQ9Il9mYzgxMWJhZi1kMGVhLTQyMDgtODQ1Mi1mMDAwZmQwNDE4ODAiPg0KICAgICAgICAgICAgICA8dGQ+PHNwYW4+QWN0aXZlIFByb2JsZW1zIGV4Y2x1ZGVkL25vdCBhdmFpbGFibGU8L3NwYW4+PGJyPjwvdGQ+DQogICAgICAgICAgICAgIDx0ZD48L3RkPg0KICAgICAgICAgICAgICA8dGQ+PC90ZD4NCiAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgPC90YWJsZT4NCiAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iIGlkPSJJRDBFVkhBQyI+DQogICAgICA8aDQ+TWVudGFsIFN0YXR1czwvaDQ+DQogICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uLWJvZHkiPg0KICAgICAgICA8dGFibGU+DQogICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgDQogICAgICAgICAgPHRib2R5IGNsYXNzPSJ4Um93R3JvdXAiIElEPSJfNGFmYTkyNmMtZDY5NS00MjQ5LWI5YWEtYzU1NmNlNTI2YWJhIj4NCiAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgPHRkPjxzcGFuIGNsYXNzPSJ4Q29udGVudFdyYXBwaW5nIj48c3BhbiBjbGFzcz0ieFNlY29uZGFyeSI+TWVudGFsIFN0YXR1cyBleGNsdWRlZC9ub3QgYXZhaWxhYmxlPC9zcGFuPjwvc3Bhbj48L3RkPg0KICAgICAgICAgICAgICA8dGQ+PC90ZD4NCiAgICAgICAgICAgICAgPHRkPjwvdGQ+DQogICAgICAgICAgICA8L3RyPg0KICAgICAgICAgIDwvdGJvZHk+DQogICAgICAgIDwvdGFibGU+DQogICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCiAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIiBpZD0iSUQwRVBKQUMiPg0KICAgICAgPGg0PkZ1bmN0aW9uYWwgU3RhdHVzPC9oND4NCiAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24tYm9keSI+DQogICAgICAgIDx0YWJsZT4NCiAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICANCiAgICAgICAgICA8dGJvZHkgY2xhc3M9InhSb3dHcm91cCIgSUQ9Il8xMGI1ZTEyNC0xMzc0LTQ4NzAtYTI0MC0zZTBiYjNmNjViNDQiPg0KICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICA8dGQ+PHNwYW4gY2xhc3M9InhDb250ZW50V3JhcHBpbmciPjxzcGFuPkZ1bmN0aW9uYWwgU3RhdHVzIGV4Y2x1ZGVkL25vdCBhdmFpbGFibGU8L3NwYW4+PC9zcGFuPjwvdGQ+DQogICAgICAgICAgICAgIDx0ZD48L3RkPg0KICAgICAgICAgICAgICA8dGQ+PC90ZD4NCiAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgPC90YWJsZT4NCiAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iIGlkPSJJRDBFUUxBQyI+DQogICAgICA8aDQ+QWxsZXJnaWVzIGFuZCBBZHZlcnNlIFJlYWN0aW9uczwvaDQ+DQogICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uLWJvZHkiPg0KICAgICAgICA8dGFibGU+DQogICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgDQogICAgICAgICAgPHRib2R5Pg0KICAgICAgICAgICAgPHRyIElEPSJfMGQyMDQ3NWQtOTg5Zi00NWQyLTg5OTctYTFhYzA2OTNlMTNkIj4NCiAgICAgICAgICAgICAgPHRkPjxzcGFuPk5vIEtub3duIEFsbGVyZ2llczwvc3Bhbj48YnI+PC90ZD4NCiAgICAgICAgICAgICAgPHRkPjwvdGQ+DQogICAgICAgICAgICAgIDx0ZD48L3RkPg0KICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICA8L3Rib2R5Pg0KICAgICAgICA8L3RhYmxlPg0KICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQogICAgPGRpdiBjbGFzcz0ic2VjdGlvbiIgaWQ9IklEMEVHUEFDIj4NCiAgICAgIDxoND5NZWRpY2F0aW9uczwvaDQ+DQogICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uLWJvZHkiPg0KICAgICAgICA8dGFibGU+DQogICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgDQogICAgICAgICAgPHRib2R5IGNsYXNzPSJ4Um93R3JvdXAiPg0KICAgICAgICAgICAgPHRyIElEPSJfYjY2YmNmMzgtOGE2ZC00MmE2LTliNzEtNDdkY2JkODZjOTkzIj4NCiAgICAgICAgICAgICAgPHRkPjxzcGFuIGNsYXNzPSJ4Q29udGVudFdyYXBwaW5nIj48c3Bhbj5ObyBDdXJyZW50IE1lZGljYXRpb25zPC9zcGFuPjxicj48L3NwYW4+PC90ZD4NCiAgICAgICAgICAgICAgPHRkPjwvdGQ+DQogICAgICAgICAgICAgIDx0ZD48L3RkPg0KICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICA8L3Rib2R5Pg0KICAgICAgICA8L3RhYmxlPg0KICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQogICAgPGRpdiBjbGFzcz0ic2VjdGlvbiIgaWQ9IklEMEVYQkFFIj4NCiAgICAgIDxoND5Qcm9jZWR1cmVzPC9oND4NCiAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24tYm9keSI+DQogICAgICAgIDx0YWJsZT4NCiAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICANCiAgICAgICAgICA8dGJvZHkgY2xhc3M9InhSb3dHcm91cCI+DQogICAgICAgICAgICA8dHIgSUQ9Il81Y2MyMWRiOC1iODhmLTRlMTEtOGI3YS0wYmY1MzExZjlkMWYiPg0KICAgICAgICAgICAgICA8dGQ+PHNwYW4+UHJvY2VkdXJlcyBleGNsdWRlZC9ub3QgYXZhaWxhYmxlPC9zcGFuPjwvdGQ+DQogICAgICAgICAgICAgIDx0ZD48L3RkPg0KICAgICAgICAgICAgICA8dGQ+PC90ZD4NCiAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgPC90YWJsZT4NCiAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iIGlkPSJJRDBFUERBRSI+DQogICAgICA8aDQ+SW1tdW5pemF0aW9uczwvaDQ+DQogICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uLWJvZHkiPg0KICAgICAgICA8dGFibGUgY2xhc3M9InhCb3JkZXJCb3R0b20iPg0KICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgIA0KICAgICAgICAgIDx0Ym9keSBjbGFzcz0ieFJvd0dyb3VwIj4NCiAgICAgICAgICAgIDx0ciBJRD0iXzJjZTdkZDk5LTJhYzYtNDM2Yy1iNGI1LWRmYzAxZmVlZWNjNSI+DQogICAgICAgICAgICAgIDx0ZD48c3BhbiBjbGFzcz0ieENvbnRlbnRXcmFwcGluZyI+PHNwYW4+SW1tdW5pemF0aW9ucyBleGNsdWRlZC9ub3QgYXZhaWxhYmxlPC9zcGFuPjxicj48L3NwYW4+PC90ZD4NCiAgICAgICAgICAgICAgPHRkPjwvdGQ+DQogICAgICAgICAgICAgIDx0ZD48L3RkPg0KICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICA8L3Rib2R5Pg0KICAgICAgICA8L3RhYmxlPg0KICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQogICAgPGRpdiBjbGFzcz0ic2VjdGlvbiIgaWQ9IklEMEVYRkFFIj4NCiAgICAgIDxoND5GYW1pbHkgSGlzdG9yeTwvaDQ+DQogICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uLWJvZHkiPg0KICAgICAgICA8dGFibGU+PHNwYW4gc3R5bGU9ImZvbnQtd2VpZ2h0OkJvbGQ7ICIgY2xhc3M9InhMYWJlbCI+VW5rbm93biBGYW1pbHkgTWVtYmVyPC9zcGFuPg0KICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgIA0KICAgICAgICAgIDx0Ym9keT4NCiAgICAgICAgICAgIDx0ciBJRD0iXzhhMjY0OWFhLTk4ZDEtNGI0ZS1hMThmLTg1MmI2MDIwZDM5NSI+DQogICAgICAgICAgICAgIDx0ZD48c3Bhbj5GYW1pbHkgSGlzdG9yeSBleGNsdWRlZC9ub3QgYXZhaWxhYmxlPC9zcGFuPjwvdGQ+DQogICAgICAgICAgICAgIDx0ZD48L3RkPg0KICAgICAgICAgICAgICA8dGQ+PC90ZD4NCiAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgPC90YWJsZT4NCiAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iIGlkPSJJRDBFR0lBRSI+DQogICAgICA8aDQ+U29jaWFsIEhpc3Rvcnk8L2g0Pg0KICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbi1ib2R5Ij4NCiAgICAgICAgPHRhYmxlPjxzcGFuIHN0eWxlPSJmb250LXdlaWdodDpCb2xkOyAiPlNtb2tpbmcgU3RhdHVzPC9zcGFuPg0KICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgIA0KICAgICAgICAgIDx0Ym9keSBjbGFzcz0ieFJvd0dyb3VwIj4NCiAgICAgICAgICAgIDx0ciBJRD0iXzA2Yjc3MjA2LWMwMmYtNDY3ZC05MTA3LTNmYWQwOTY1NWNlYiI+DQogICAgICAgICAgICAgIDx0ZD48c3BhbiBjbGFzcz0ieFNlY29uZGFyeSI+VG9iYWNjbyBzbW9raW5nIGNvbnN1bXB0aW9uIHVua25vd248L3NwYW4+PC90ZD4NCiAgICAgICAgICAgICAgPHRkPjwvdGQ+DQogICAgICAgICAgICAgIDx0ZD48L3RkPg0KICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICA8L3Rib2R5Pg0KICAgICAgICA8L3RhYmxlPg0KICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQogICAgPGRpdiBjbGFzcz0ic2VjdGlvbiIgaWQ9IklEMEVOS0FFIj4NCiAgICAgIDxoND5Gb3JlaWduIFRyYXZlbDwvaDQ+DQogICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uLWJvZHkiPg0KICAgICAgICA8cCBjbGFzcz0iQm9sZCI+PC9wPg0KICAgICAgICA8dWw+DQogICAgICAgICAgPGxpPjxzcGFuIGNsYXNzPSJ4U2Vjb25kYXJ5Ij5Gb3JlaWduIFRyYXZlbCBleGNsdWRlZC9ub3QgYXZhaWxhYmxlPC9zcGFuPjwvbGk+DQogICAgICAgIDwvdWw+DQogICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCiAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIiBpZD0iSUQwRTZLQUUiPg0KICAgICAgPGg0PkhlYWx0aCBDb25jZXJuczwvaDQ+DQogICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uLWJvZHkiPg0KICAgICAgICA8dGFibGU+PHNwYW4gc3R5bGU9ImZvbnQtd2VpZ2h0OkJvbGQ7ICI+Q29uY2VybnM8L3NwYW4+DQogICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgDQogICAgICAgICAgPHRib2R5IGNsYXNzPSJ4Um93R3JvdXAiIElEPSJfMjIzNGFkOTAtNGFmNy00NzgyLTk2OGItYmQwZmVjNmRhYjAzIj4NCiAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgPHRkPjxzcGFuPjwvc3Bhbj48c3Bhbj5IZWFsdGggQ29uY2VybnMgZXhjbHVkZWQvbm90IGF2YWlsYWJsZTwvc3Bhbj48L3RkPg0KICAgICAgICAgICAgICA8dGQ+PC90ZD4NCiAgICAgICAgICAgICAgPHRkPjwvdGQ+DQogICAgICAgICAgICA8L3RyPg0KICAgICAgICAgIDwvdGJvZHk+DQogICAgICAgIDwvdGFibGU+DQogICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCiAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIiBpZD0iSUQwRVlNQUUiPg0KICAgICAgPGg0PkdvYWxzPC9oND4NCiAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24tYm9keSI+DQogICAgICAgIDx0YWJsZT4NCiAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICANCiAgICAgICAgICA8dGJvZHkgY2xhc3M9InhSb3dHcm91cCIgSUQ9Il85OWM0YTg4Ni04OTJiLTQ4ZTEtYmVmMC02N2NkMTE2Nzc1ZGMiPg0KICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICA8dGQ+PHNwYW4+R29hbHMgZXhjbHVkZWQvbm90IGF2YWlsYWJsZTwvc3Bhbj48L3RkPg0KICAgICAgICAgICAgICA8dGQ+PC90ZD4NCiAgICAgICAgICAgICAgPHRkPjwvdGQ+DQogICAgICAgICAgICA8L3RyPg0KICAgICAgICAgIDwvdGJvZHk+DQogICAgICAgIDwvdGFibGU+DQogICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCiAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIiBpZD0iSUQwRVpPQUUiPg0KICAgICAgPGg0Pk51dHJpdGlvbjwvaDQ+DQogICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uLWJvZHkiPg0KICAgICAgICA8dGFibGUgY2xhc3M9InhCb3JkZXJCb3R0b20iPg0KICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgIA0KICAgICAgICAgIDx0Ym9keSBjbGFzcz0ieFJvd0dyb3VwIiBJRD0iXzAyMzI2NmMwLTg3M2YtNDUwMy04MjRlLTZhODdjNDhlYzYzMSI+DQogICAgICAgICAgICA8dHIgSUQ9Il9lNDc5ZjEwYS00MjIwLTQ1NmMtOGNhYi1lMDY5ZTA1MTY2NzUiPg0KICAgICAgICAgICAgICA8dGQ+PHNwYW4gY2xhc3M9InhDb250ZW50V3JhcHBpbmciPjxzcGFuIGNsYXNzPSJ4U2Vjb25kYXJ5Ij5OdXRyaXRpb24gZXhjbHVkZWQvbm90IGF2YWlsYWJsZTwvc3Bhbj48L3NwYW4+PC90ZD4NCiAgICAgICAgICAgICAgPHRkPjxzcGFuIGNsYXNzPSJ4U2Vjb25kYXJ5Ij48L3NwYW4+PC90ZD4NCiAgICAgICAgICAgICAgPHRkPjwvdGQ+DQogICAgICAgICAgICA8L3RyPg0KICAgICAgICAgIDwvdGJvZHk+DQogICAgICAgIDwvdGFibGU+DQogICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCiAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIiBpZD0iSUQwRUlSQUUiPg0KICAgICAgPGg0Pkhvc3BpdGFsIERpc2NoYXJnZSBJbnN0cnVjdGlvbnM8L2g0Pg0KICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbi1ib2R5Ij4NCiAgICAgICAgPHAgY2xhc3M9IkJvbGQiPjwvcD4NCiAgICAgICAgPHVsPg0KICAgICAgICAgIDxsaT48c3BhbiBjbGFzcz0ieFNlY29uZGFyeSI+SG9zcGl0YWwgRGlzY2hhcmdlIEluc3RydWN0aW9ucyBleGNsdWRlZC9ub3QgYXZhaWxhYmxlPC9zcGFuPjwvbGk+DQogICAgICAgIDwvdWw+DQogICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCiAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIiBpZD0iSUQwRTFSQUUiPg0KICAgICAgPGg0Pk1lZGljYWwgRXF1aXBtZW50PC9oND4NCiAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24tYm9keSI+DQogICAgICAgIDx0YWJsZT4NCiAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICANCiAgICAgICAgICA8dGJvZHkgY2xhc3M9InhSb3dHcm91cCI+DQogICAgICAgICAgICA8dHIgSUQ9Il9iMWQxMTkxZi05ZTE5LTQxZWYtYmZjZS03NjQwNTljM2Y4NTkiPg0KICAgICAgICAgICAgICA8dGQ+PHNwYW4gY2xhc3M9InhDb250ZW50V3JhcHBpbmciPk1lZGljYWwgRXF1aXBtZW50IGV4Y2x1ZGVkL25vdCBhdmFpbGFibGU8L3NwYW4+PC90ZD4NCiAgICAgICAgICAgICAgPHRkPjwvdGQ+DQogICAgICAgICAgICAgIDx0ZD48L3RkPg0KICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICA8L3Rib2R5Pg0KICAgICAgICA8L3RhYmxlPg0KICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQogICAgPGRpdiBjbGFzcz0ic2VjdGlvbiIgaWQ9IklEMEVOVEFFIj4NCiAgICAgIDxoND5QbGFuIG9mIFRyZWF0bWVudDwvaDQ+DQogICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uLWJvZHkiPg0KICAgICAgICA8dGFibGU+PHNwYW4gc3R5bGU9ImZvbnQtd2VpZ2h0OkJvbGQ7ICI+UGxhbm5lZCBJbW11bml6YXRpb25zPC9zcGFuPg0KICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgIA0KICAgICAgICAgIDx0Ym9keSBjbGFzcz0ieFJvd0dyb3VwIj4NCiAgICAgICAgICAgIDx0ciBJRD0iXzhmNzNiODE4LTZjODgtNDJmZS04MTFhLWMyOTE5Y2M1M2UyNiI+DQogICAgICAgICAgICAgIDx0ZD48c3BhbiBjbGFzcz0ieENvbnRlbnRXcmFwcGluZyI+PHNwYW4+cG5ldW1vY29jY2FsIHBvbHlzYWNjaGFyaWRlIFBQVjIzPC9zcGFuPjxicj48L3NwYW4+PC90ZD4NCiAgICAgICAgICAgICAgPHRkPjxzcGFuIGNsYXNzPSJ4TGFiZWwiPlNjaGVkdWxlZCBmb3IgQWRtaW5pc3RyYXRpb248L3NwYW4+PGJyPjwvdGQ+DQogICAgICAgICAgICAgIDx0ZD48c3BhbiBjbGFzcz0ieFNlY29uZGFyeSI+UmVxdWVzdDwvc3Bhbj48YnI+PC90ZD4NCiAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgICA8dGJvZHkgY2xhc3M9InhSb3dHcm91cCI+DQogICAgICAgICAgICA8dHIgSUQ9Il8zNjdhNjRiMi02OWIxLTRkYWEtYTUxMy1hM2MzYWQ0ZDg1MGIiPg0KICAgICAgICAgICAgICA8dGQ+PHNwYW4gY2xhc3M9InhDb250ZW50V3JhcHBpbmciPjxzcGFuPlBuZXVtb2NvY2NhbCBjb25qdWdhdGUgUENWIDEzPC9zcGFuPjxicj48L3NwYW4+PC90ZD4NCiAgICAgICAgICAgICAgPHRkPjxzcGFuIGNsYXNzPSJ4TGFiZWwiPlNjaGVkdWxlZCBmb3IgQWRtaW5pc3RyYXRpb248L3NwYW4+PGJyPjwvdGQ+DQogICAgICAgICAgICAgIDx0ZD48c3BhbiBjbGFzcz0ieFNlY29uZGFyeSI+UmVxdWVzdDwvc3Bhbj48YnI+PC90ZD4NCiAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgICA8dGJvZHkgY2xhc3M9InhSb3dHcm91cCI+DQogICAgICAgICAgICA8dHIgSUQ9Il8xMzQzODlmZS02NTY1LTQ5ZTctYmYzNC0xNzhmOGZkZDA4ZmIiPg0KICAgICAgICAgICAgICA8dGQ+PHNwYW4gY2xhc3M9InhDb250ZW50V3JhcHBpbmciPjxzcGFuPkluZmx1ZW56YSBBIG1vbm92YWxlbnQgKEg1TjEpLCBBREpVVkFOVEVELTIwMTM8L3NwYW4+PGJyPjwvc3Bhbj48L3RkPg0KICAgICAgICAgICAgICA8dGQ+PHNwYW4gY2xhc3M9InhMYWJlbCI+U2NoZWR1bGVkIGZvciBBZG1pbmlzdHJhdGlvbjwvc3Bhbj48YnI+PC90ZD4NCiAgICAgICAgICAgICAgPHRkPjxzcGFuIGNsYXNzPSJ4U2Vjb25kYXJ5Ij5SZXF1ZXN0PC9zcGFuPjxicj48L3RkPg0KICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICA8L3Rib2R5Pg0KICAgICAgICAgIDx0Ym9keSBjbGFzcz0ieFJvd0dyb3VwIj4NCiAgICAgICAgICAgIDx0ciBJRD0iX2NlZmJkY2JkLWNhODYtNGYyNS04ZmIwLWJjMmFlMDhlZTRiZCI+DQogICAgICAgICAgICAgIDx0ZD48c3BhbiBjbGFzcz0ieENvbnRlbnRXcmFwcGluZyI+PHNwYW4+U0FSUy1Db1YtMiB2YWNjaW5lIChNb2Rlcm5hKTwvc3Bhbj48YnI+PC9zcGFuPjwvdGQ+DQogICAgICAgICAgICAgIDx0ZD48c3BhbiBjbGFzcz0ieExhYmVsIj5TY2hlZHVsZWQgZm9yIEFkbWluaXN0cmF0aW9uPC9zcGFuPjxicj48L3RkPg0KICAgICAgICAgICAgICA8dGQ+PHNwYW4gY2xhc3M9InhTZWNvbmRhcnkiPlJlcXVlc3Q8L3NwYW4+PGJyPjwvdGQ+DQogICAgICAgICAgICA8L3RyPg0KICAgICAgICAgIDwvdGJvZHk+DQogICAgICAgIDwvdGFibGU+DQogICAgICAgIDx0YWJsZT48c3BhbiBzdHlsZT0iZm9udC13ZWlnaHQ6Qm9sZDsgIj5QbGFubmVkIE9ic2VydmF0aW9uczwvc3Bhbj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICANCiAgICAgICAgICA8dGJvZHkgY2xhc3M9InhSb3dHcm91cCI+DQogICAgICAgICAgICA8dHIgSUQ9Il9lN2NjNzIwMy01NGE4LTRiNmMtYWRlZC1jMTMyODMzODQ1NzMiPg0KICAgICAgICAgICAgICA8dGQ+PHNwYW4+UGxhbiBPZiBUcmVhdG1lbnQgRW50cmllcyBleGNsdWRlZC9ub3QgYXZhaWxhYmxlPC9zcGFuPjxicj48L3RkPg0KICAgICAgICAgICAgICA8dGQ+PC90ZD4NCiAgICAgICAgICAgICAgPHRkPjwvdGQ+DQogICAgICAgICAgICA8L3RyPg0KICAgICAgICAgIDwvdGJvZHk+DQogICAgICAgIDwvdGFibGU+DQogICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCiAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIiBpZD0iSUQwRVE1QUUiPg0KICAgICAgPGg0PlJlc3VsdHM8L2g0Pg0KICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbi1ib2R5Ij4NCiAgICAgICAgPHRhYmxlPg0KICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgIA0KICAgICAgICAgIDx0Ym9keSBjbGFzcz0ieFJvd0dyb3VwIj4NCiAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgPHRkPjxzcGFuIGNsYXNzPSJ4U2Vjb25kYXJ5Ij5ObyBLbm93biBSZXN1bHRzPC9zcGFuPjwvdGQ+DQogICAgICAgICAgICAgIDx0ZD48L3RkPg0KICAgICAgICAgICAgICA8dGQ+PC90ZD4NCiAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICA8dHIgSUQ9Il8xOWZmNmM4Ni0zYzA4LTQ4YzMtYWQ4MC1kYjJiNjlkYjE1NWMiPg0KICAgICAgICAgICAgICA8dGQ+PC90ZD4NCiAgICAgICAgICAgICAgPHRkPjxzcGFuIGNsYXNzPSJ4U2Vjb25kYXJ5Ij5SZXN1bHRzIGV4Y2x1ZGVkL25vdCBhdmFpbGFibGU8L3NwYW4+PHNwYW4gY2xhc3M9InhTZWNvbmRhcnkiPjwvc3Bhbj48L3RkPg0KICAgICAgICAgICAgICA8dGQ+PC90ZD4NCiAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgPC90YWJsZT4NCiAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iIGlkPSJJRDBFUUJBRyI+DQogICAgICA8aDQ+Vml0YWwgU2lnbnM8L2g0Pg0KICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbi1ib2R5Ij4NCiAgICAgICAgPHRhYmxlIGNsYXNzPSJ4Qm9yZGVyQm90dG9tIj4NCiAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICANCiAgICAgICAgICA8dGJvZHkgY2xhc3M9InhSb3dHcm91cCI+DQogICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgIDx0ZD48L3RkPg0KICAgICAgICAgICAgICA8dGQ+PC90ZD4NCiAgICAgICAgICAgICAgPHRkPjwvdGQ+DQogICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgPHRyIElEPSJfNGQ5MmY2ZDctYWRlYy00NjJkLWFjOTctZmJkZjlkZWYwYTRhIj4NCiAgICAgICAgICAgICAgPHRkPjwvdGQ+DQogICAgICAgICAgICAgIDx0ZD48c3Bhbj48c3BhbiBjbGFzcz0ieFNlY29uZGFyeSI+Vml0YWwgU2lnbnMgZXhjbHVkZWQvbm90IGF2YWlsYWJsZSA8L3NwYW4+PHNwYW4gY2xhc3M9InhTZWNvbmRhcnkiPjwvc3Bhbj48L3NwYW4+PC90ZD4NCiAgICAgICAgICAgICAgPHRkPjwvdGQ+DQogICAgICAgICAgICA8L3RyPg0KICAgICAgICAgIDwvdGJvZHk+DQogICAgICAgIDwvdGFibGU+DQogICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCiAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIiBpZD0iSUQwRU1FQUciPg0KICAgICAgPGg0PkFkdmFuY2UgRGlyZWN0aXZlczwvaDQ+DQogICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uLWJvZHkiPg0KICAgICAgICA8dGFibGUgY2xhc3M9InhCb3JkZXJCb3R0b20iPg0KICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgIA0KICAgICAgICAgIDx0Ym9keT4NCiAgICAgICAgICAgIDx0ciBJRD0iXzVmNjM0N2QxLTQ5ZmItNDZlNS04NjQyLTJkYjM4YzdiOWFlYiI+DQogICAgICAgICAgICAgIDx0ZD48c3Bhbj5BZHZhbmNlIERpcmVjdGl2ZXMgZXhjbHVkZWQvbm90IGF2YWlsYWJsZTwvc3Bhbj48L3RkPg0KICAgICAgICAgICAgICA8dGQ+PC90ZD4NCiAgICAgICAgICAgICAgPHRkPjwvdGQ+DQogICAgICAgICAgICA8L3RyPg0KICAgICAgICAgIDwvdGJvZHk+DQogICAgICAgIDwvdGFibGU+DQogICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCiAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIiBpZD0iSUQwRVlHQUciPg0KICAgICAgPGg0PkVuY291bnRlcnM8L2g0Pg0KICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbi1ib2R5Ij4NCiAgICAgICAgPHRhYmxlPg0KICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgIA0KICAgICAgICAgIDx0Ym9keSBjbGFzcz0ieFJvd0dyb3VwIj4NCiAgICAgICAgICAgIDx0ciBJRD0iXzQwNjZmODM3LTYzMDQtNDFiMi04ODNmLTQ3YzA1Y2NmZWUyNiI+DQogICAgICAgICAgICAgIDx0ZD48c3Bhbj5SZWN1cnJpbmc8L3NwYW4+PGJyPjxzcGFuPjxzcGFuIGNsYXNzPSJ4U2Vjb25kYXJ5IHhMYWJlbCI+RW5jb3VudGVyIERpYWdub3Npczo8L3NwYW4+PHNwYW4gY2xhc3M9InhTZWNvbmRhcnkiPk5vIEtub3duIEVuY291bnRlciBEaWFnbm9zaXM8L3NwYW4+PC9zcGFuPjwvdGQ+DQogICAgICAgICAgICAgIDx0ZD48c3BhbiBjbGFzcz0ieFNlY29uZGFyeSI+Ny1NYXktMjAyMSA5OjUwIDwvc3Bhbj48c3BhbiBjbGFzcz0ieExhYmVsIHhTZWNvbmRhcnkiPiBUbyA8L3NwYW4+PHNwYW4gY2xhc3M9InhTZWNvbmRhcnkiPjQtSnVuLTIwMjEgMTQ6MTY8L3NwYW4+PGJyPjxzcGFuIGNsYXNzPSJ4U2Vjb25kYXJ5Ij5XYXRraW5zLCBLZXZpbiAoQXR0ZW5kaW5nKTwvc3Bhbj48YnI+PHNwYW4gY2xhc3M9InhTZWNvbmRhcnkiPkFUTC1SZWdpc3RyYXRpb248L3NwYW4+PGJyPjxzcGFuIGNsYXNzPSJ4U2Vjb25kYXJ5Ij50ZWw6KzEtKDc3MCk0MDAtNjAwMDwvc3Bhbj48L3RkPg0KICAgICAgICAgICAgICA8dGQ+PC90ZD4NCiAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgPC90YWJsZT4NCiAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iIGlkPSJJRDBFMUxBRyI+DQogICAgICA8aDQ+UGF5ZXJzPC9oND4NCiAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24tYm9keSI+DQogICAgICAgIDx0YWJsZT48c3BhbiBzdHlsZT0iZm9udC13ZWlnaHQ6Qm9sZDsgIj5JbnN1cmFuY2UgUHJvdmlkZXJzPC9zcGFuPg0KICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgIA0KICAgICAgICAgIDx0Ym9keT4NCiAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgPHRkPjxzcGFuIGNsYXNzPSJ4SGVhZGVySW5zdXJlciI+UkVTRUFSQ0ggQ0xJTklDQUxcNTE3MDE1MTwvc3Bhbj48YnI+PHNwYW4+MjYxMCBTSEVSSURBTiBSRCAyNjEwIFNIRVJJREFOIFJEIFpJT04gSUwgNjAwOTk8L3NwYW4+PGJyPjxzcGFuPjwvc3Bhbj48L3RkPg0KICAgICAgICAgICAgICA8dGQ+PC90ZD4NCiAgICAgICAgICAgICAgPHRkPjxzcGFuIGNsYXNzPSJ4TGFiZWwiPk1lbWJlciBJRDogPC9zcGFuPjxzcGFuIGNsYXNzPSJ4U2Vjb25kYXJ5Ij5URVNUPC9zcGFuPjxicj48c3BhbiBjbGFzcz0ieExhYmVsIj5Hcm91cCBOdW1iZXI6IDwvc3Bhbj48c3BhbiBjbGFzcz0ieFNlY29uZGFyeSI+PC9zcGFuPjwvdGQ+DQogICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICA8dGQ+PHNwYW4gY2xhc3M9InhIZWFkZXJJbnN1cmVyIj5SRVNFQVJDSCBDTElOSUNBTFw1MTcwMTU1PC9zcGFuPjxicj48c3Bhbj4yNjEwIFNIRVJJREFOIFJEIDI2MTAgU0hFUklEQU4gUkQgWklPTiBJTCA2MDA5OTwvc3Bhbj48YnI+PHNwYW4+PC9zcGFuPjwvdGQ+DQogICAgICAgICAgICAgIDx0ZD48L3RkPg0KICAgICAgICAgICAgICA8dGQ+PHNwYW4gY2xhc3M9InhMYWJlbCI+TWVtYmVyIElEOiA8L3NwYW4+PHNwYW4gY2xhc3M9InhTZWNvbmRhcnkiPk1PUkU8L3NwYW4+PGJyPjxzcGFuIGNsYXNzPSJ4TGFiZWwiPkdyb3VwIE51bWJlcjogPC9zcGFuPjxzcGFuIGNsYXNzPSJ4U2Vjb25kYXJ5Ij48L3NwYW4+PC90ZD4NCiAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgIDx0ZD48c3BhbiBjbGFzcz0ieEhlYWRlckluc3VyZXIiPlJFU0VBUkNIIENMSU5JQ0FMXDUxNzAxNTE8L3NwYW4+PGJyPjxzcGFuPjI2MTAgU0hFUklEQU4gUkQgMjYxMCBTSEVSSURBTiBSRCBaSU9OIElMIDYwMDk5PC9zcGFuPjxicj48c3Bhbj48L3NwYW4+PC90ZD4NCiAgICAgICAgICAgICAgPHRkPjwvdGQ+DQogICAgICAgICAgICAgIDx0ZD48c3BhbiBjbGFzcz0ieExhYmVsIj5NZW1iZXIgSUQ6IDwvc3Bhbj48c3BhbiBjbGFzcz0ieFNlY29uZGFyeSI+VEVTVDwvc3Bhbj48YnI+PHNwYW4gY2xhc3M9InhMYWJlbCI+R3JvdXAgTnVtYmVyOiA8L3NwYW4+PHNwYW4gY2xhc3M9InhTZWNvbmRhcnkiPjwvc3Bhbj48L3RkPg0KICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgPHRkPjxzcGFuIGNsYXNzPSJ4SGVhZGVySW5zdXJlciI+UkVTRUFSQ0ggQ0xJTklDQUxcNTE3MDE1NTwvc3Bhbj48YnI+PHNwYW4+MjYxMCBTSEVSSURBTiBSRCAyNjEwIFNIRVJJREFOIFJEIFpJT04gSUwgNjAwOTk8L3NwYW4+PGJyPjxzcGFuPjwvc3Bhbj48L3RkPg0KICAgICAgICAgICAgICA8dGQ+PC90ZD4NCiAgICAgICAgICAgICAgPHRkPjxzcGFuIGNsYXNzPSJ4TGFiZWwiPk1lbWJlciBJRDogPC9zcGFuPjxzcGFuIGNsYXNzPSJ4U2Vjb25kYXJ5Ij5NT1JFPC9zcGFuPjxicj48c3BhbiBjbGFzcz0ieExhYmVsIj5Hcm91cCBOdW1iZXI6IDwvc3Bhbj48c3BhbiBjbGFzcz0ieFNlY29uZGFyeSI+PC9zcGFuPjwvdGQ+DQogICAgICAgICAgICA8L3RyPg0KICAgICAgICAgIDwvdGJvZHk+DQogICAgICAgIDwvdGFibGU+DQogICAgICAgIDx0YWJsZT48c3BhbiBzdHlsZT0iZm9udC13ZWlnaHQ6Qm9sZDsgIj5HdWFyYW50b3JzPC9zcGFuPg0KICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgIA0KICAgICAgICAgIDx0Ym9keT4NCiAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgPHRkPjxzcGFuPlNlcmZsZXhmaWVsZCBUZXN0PC9zcGFuPjxicj48c3Bhbj4yNjEwIFNoZXJpZGFuIFJkLiBaaW9uIElMIDYwMDk5IFVTPC9zcGFuPjxicj48c3Bhbj50ZWw6KzEtKDc3MCk0MDAtMTExMTwvc3Bhbj48L3RkPg0KICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICA8L3Rib2R5Pg0KICAgICAgICA8L3RhYmxlPg0KICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQogICAgPGRpdiBpZD0iY2FyZS10ZWFtIiBjbGFzcz0ic2VjdGlvbiI+DQogICAgICA8aDQ+SGVhbHRoIENhcmUgUHJvdmlkZXJzPC9oND4NCiAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24tYm9keSI+DQogICAgICAgIDxoNT5HZW5lcmFsIEFjdXRlIENhcmUgSG9zcGl0YWw8L2g1Pg0KICAgICAgICA8ZGl2Pg0KICAgICAgICAgIDxkbD4NCiAgICAgICAgICAgIDxkZD48c3BhbiBjbGFzcz0iY29udGFjdEZpcnN0TmFtZSI+S2V2aW4gPC9zcGFuPjxzcGFuIGNsYXNzPSJjb250YWN0TGFzdE5hbWUiPldhdGtpbnMgPC9zcGFuPjwvZGQ+DQogICAgICAgICAgPC9kbD4NCiAgICAgICAgICA8ZGw+DQogICAgICAgICAgICA8ZGQ+DQogICAgICAgICAgICAgIDxhZGRyZXNzPjYwMCBDZWxlYnJhdGUgTGlmZSBQYXJrd2F5PGJyPk5ld25hbiwgR0EgMzAyNjMgPC9hZGRyZXNzPg0KICAgICAgICAgICAgPC9kZD4NCiAgICAgICAgICAgIDxkdD4gQWRkcmVzcyA8L2R0Pg0KICAgICAgICAgIDwvZGw+DQogICAgICAgICAgPGRsPjwvZGw+DQogICAgICAgICAgPGRsPjwvZGw+DQogICAgICAgIDwvZGl2Pg0KICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQogICAgPGRpdiBpZD0icGF0aWVudC1jb250YWN0cyIgY2xhc3M9InNlY3Rpb24iPg0KICAgICAgPGg0PlBhdGllbnQgQ29udGFjdHM8L2g0Pg0KICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbi1ib2R5Ij4NCiAgICAgICAgPGg1Pkd1YXJhbnRvcjwvaDU+DQogICAgICAgIDxkaXY+DQogICAgICAgICAgPGRsPg0KICAgICAgICAgICAgPGRkPjxzcGFuIGNsYXNzPSJjb250YWN0Rmlyc3ROYW1lIj5TZXJmbGV4ZmllbGQgPC9zcGFuPjxzcGFuIGNsYXNzPSJjb250YWN0TGFzdE5hbWUiPlRlc3QgPC9zcGFuPjwvZGQ+DQogICAgICAgICAgPC9kbD4NCiAgICAgICAgICA8ZGw+DQogICAgICAgICAgICA8ZGQ+DQogICAgICAgICAgICAgIDxhZGRyZXNzPjI2MTAgU2hlcmlkYW4gUmQuPGJyPlppb24sIElMIDYwMDk5IDwvYWRkcmVzcz4NCiAgICAgICAgICAgIDwvZGQ+DQogICAgICAgICAgICA8ZHQ+IEFkZHJlc3MgPC9kdD4NCiAgICAgICAgICA8L2RsPg0KICAgICAgICAgIDxkbD4NCiAgICAgICAgICAgIDxkZCBjbGFzcz0idGVsZWNvbSI+KDc3MCk0MDAtMTExMTwvZGQ+DQogICAgICAgICAgICA8ZHQ+IFBob25lPC9kdD4NCiAgICAgICAgICA8L2RsPg0KICAgICAgICAgIDxkbD48L2RsPg0KICAgICAgICA8L2Rpdj4NCiAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KICAgIDxkaXYgaWQ9ImRvY3VtZW50LWRldGFpbHMiIGNsYXNzPSJzZWN0aW9uIj4NCiAgICAgIDxoND5Eb2N1bWVudCBEZXRhaWxzPC9oND4NCiAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24tYm9keSI+DQogICAgICAgIDxkbD4NCiAgICAgICAgICA8ZGQ+QVRMPC9kZD4NCiAgICAgICAgICA8ZGQ+PC9kZD4NCiAgICAgICAgICA8ZGQ+SnVuZSA1LCAyMDIxIDIwDQo6DQoxNjwvZGQ+DQogICAgICAgICAgPGR0PlB1Ymxpc2hlZDwvZHQ+DQogICAgICAgIDwvZGw+DQogICAgICAgIDxkbD4NCiAgICAgICAgICA8ZGQ+DQogICAgICAgICAgICA8YWRkcmVzcz42MDAgQ2VsZWJyYXRlIExpZmUgUGFya3dheTxicj5OZXduYW4sIEdBIDMwMjY1ODAwMSA8L2FkZHJlc3M+DQogICAgICAgICAgPC9kZD4NCiAgICAgICAgICA8ZHQ+QWRkcmVzczwvZHQ+DQogICAgICAgIDwvZGw+DQogICAgICAgIDxkbD4NCiAgICAgICAgICA8ZGQgY2xhc3M9InRlbGVjb20iPig3NzApNDAwLTYwMDA8L2RkPg0KICAgICAgICAgIDxkdD4gUGhvbmU8L2R0Pg0KICAgICAgICA8L2RsPg0KICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQogIDwvYm9keT4NCjwvaHRtbD4="
}